{"ast":null,"code":"import { Dimensions } from 'react-native';\nconst SnapchatResolution = {\n  width: 1920,\n  height: 1080\n};\nconst InstagramResolution = {\n  width: 3840,\n  height: 2160\n};\nconst ScreenAspectRatio = Dimensions.get('window').height / Dimensions.get('window').width;\n\n/**\n * Predefined templates for use in `useCameraFormat`/`getCameraFormat`.\n * @example\n * ```ts\n * const format = useCameraFormat(device, Templates.Snapchat)\n * ```\n */\nexport const Templates = {\n  /**\n   * Highest resolution video recordings (e.g. 4k)\n   */\n  Video: [{\n    videoResolution: 'max'\n  }],\n  /**\n   * High resolution 60 FPS video recordings (e.g. 1080@60 FPS)\n   */\n  Video60Fps: [{\n    fps: 60\n  }, {\n    videoResolution: 'max'\n  }],\n  /**\n   * High-FPS video recordings (e.g. 720@240 FPS)\n   */\n  VideoSlowMotion: [{\n    fps: 240\n  }, {\n    videoResolution: 'max'\n  }],\n  /**\n   * High resolution video recordings with cinematic video stabilization\n   */\n  VideoStabilized: [{\n    videoResolution: 'max'\n  }, {\n    videoStabilizationMode: 'cinematic-extended'\n  }],\n  /**\n   * Highest resolution photo capture (e.g. 4k)\n   */\n  Photo: [{\n    photoResolution: 'max'\n  }],\n  /**\n   * Highest resolution photo capture with portrait screen aspect ratio (e.g. 4k)\n   */\n  PhotoPortrait: [{\n    photoResolution: 'max'\n  }, {\n    photoAspectRatio: ScreenAspectRatio\n  }],\n  /**\n   * HD-quality for faster Frame Processing in YUV pixelFormat (e.g. 720p)\n   */\n  FrameProcessingYUV: [{\n    videoResolution: {\n      width: 1080,\n      height: 720\n    }\n  }, {\n    pixelFormat: 'yuv'\n  }],\n  /**\n   * HD-quality for faster Frame Processing in RGB pixelFormat (e.g. 720p)\n   */\n  FrameProcessingRGB: [{\n    videoResolution: {\n      width: 1080,\n      height: 720\n    }\n  }, {\n    pixelFormat: 'rgb'\n  }],\n  /**\n   * Snapchat-style video recordings and photo capture\n   * Targets Full HD-quality for lower file sizes and portrait screen aspect ratio.\n   */\n  Snapchat: [{\n    videoAspectRatio: ScreenAspectRatio\n  }, {\n    videoResolution: SnapchatResolution\n  }, {\n    photoAspectRatio: ScreenAspectRatio\n  }, {\n    photoResolution: SnapchatResolution\n  }],\n  /**\n   * Instagram-style video recordings and photo capture.\n   * Targets 4k-quality and portrait screen aspect ratio.\n   */\n  Instagram: [{\n    videoAspectRatio: ScreenAspectRatio\n  }, {\n    videoResolution: InstagramResolution\n  }, {\n    photoAspectRatio: ScreenAspectRatio\n  }, {\n    photoResolution: InstagramResolution\n  }]\n};","map":{"version":3,"names":["Dimensions","SnapchatResolution","width","height","InstagramResolution","ScreenAspectRatio","get","Templates","Video","videoResolution","Video60Fps","fps","VideoSlowMotion","VideoStabilized","videoStabilizationMode","Photo","photoResolution","PhotoPortrait","photoAspectRatio","FrameProcessingYUV","pixelFormat","FrameProcessingRGB","Snapchat","videoAspectRatio","Instagram"],"sources":["C:\\Users\\Samue\\OneDrive\\Documents\\University\\Year 3\\Computing Project\\Code\\RevisionWebApp\\re-vision\\node_modules\\react-native-vision-camera\\src\\devices\\Templates.ts"],"sourcesContent":["import { Dimensions } from 'react-native'\nimport { FormatFilter } from './getCameraFormat'\n\ntype TTemplates = {\n  [key: string]: FormatFilter[]\n}\n\nconst SnapchatResolution = { width: 1920, height: 1080 }\nconst InstagramResolution = { width: 3840, height: 2160 }\nconst ScreenAspectRatio = Dimensions.get('window').height / Dimensions.get('window').width\n\n/**\n * Predefined templates for use in `useCameraFormat`/`getCameraFormat`.\n * @example\n * ```ts\n * const format = useCameraFormat(device, Templates.Snapchat)\n * ```\n */\nexport const Templates: TTemplates = {\n  /**\n   * Highest resolution video recordings (e.g. 4k)\n   */\n  Video: [{ videoResolution: 'max' }],\n  /**\n   * High resolution 60 FPS video recordings (e.g. 1080@60 FPS)\n   */\n  Video60Fps: [{ fps: 60 }, { videoResolution: 'max' }],\n  /**\n   * High-FPS video recordings (e.g. 720@240 FPS)\n   */\n  VideoSlowMotion: [{ fps: 240 }, { videoResolution: 'max' }],\n  /**\n   * High resolution video recordings with cinematic video stabilization\n   */\n  VideoStabilized: [{ videoResolution: 'max' }, { videoStabilizationMode: 'cinematic-extended' }],\n  /**\n   * Highest resolution photo capture (e.g. 4k)\n   */\n  Photo: [{ photoResolution: 'max' }],\n  /**\n   * Highest resolution photo capture with portrait screen aspect ratio (e.g. 4k)\n   */\n  PhotoPortrait: [{ photoResolution: 'max' }, { photoAspectRatio: ScreenAspectRatio }],\n  /**\n   * HD-quality for faster Frame Processing in YUV pixelFormat (e.g. 720p)\n   */\n  FrameProcessingYUV: [{ videoResolution: { width: 1080, height: 720 } }, { pixelFormat: 'yuv' }],\n  /**\n   * HD-quality for faster Frame Processing in RGB pixelFormat (e.g. 720p)\n   */\n  FrameProcessingRGB: [{ videoResolution: { width: 1080, height: 720 } }, { pixelFormat: 'rgb' }],\n  /**\n   * Snapchat-style video recordings and photo capture\n   * Targets Full HD-quality for lower file sizes and portrait screen aspect ratio.\n   */\n  Snapchat: [\n    { videoAspectRatio: ScreenAspectRatio },\n    { videoResolution: SnapchatResolution },\n    { photoAspectRatio: ScreenAspectRatio },\n    { photoResolution: SnapchatResolution },\n  ],\n  /**\n   * Instagram-style video recordings and photo capture.\n   * Targets 4k-quality and portrait screen aspect ratio.\n   */\n  Instagram: [\n    { videoAspectRatio: ScreenAspectRatio },\n    { videoResolution: InstagramResolution },\n    { photoAspectRatio: ScreenAspectRatio },\n    { photoResolution: InstagramResolution },\n  ],\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AAOzC,MAAMC,kBAAkB,GAAG;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC;AACxD,MAAMC,mBAAmB,GAAG;EAAEF,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC;AACzD,MAAME,iBAAiB,GAAGL,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACH,MAAM,GAAGH,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACJ,KAAK;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,SAAqB,GAAG;EACnC;AACF;AACA;EACEC,KAAK,EAAE,CAAC;IAAEC,eAAe,EAAE;EAAM,CAAC,CAAC;EACnC;AACF;AACA;EACEC,UAAU,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC,EAAE;IAAEF,eAAe,EAAE;EAAM,CAAC,CAAC;EACrD;AACF;AACA;EACEG,eAAe,EAAE,CAAC;IAAED,GAAG,EAAE;EAAI,CAAC,EAAE;IAAEF,eAAe,EAAE;EAAM,CAAC,CAAC;EAC3D;AACF;AACA;EACEI,eAAe,EAAE,CAAC;IAAEJ,eAAe,EAAE;EAAM,CAAC,EAAE;IAAEK,sBAAsB,EAAE;EAAqB,CAAC,CAAC;EAC/F;AACF;AACA;EACEC,KAAK,EAAE,CAAC;IAAEC,eAAe,EAAE;EAAM,CAAC,CAAC;EACnC;AACF;AACA;EACEC,aAAa,EAAE,CAAC;IAAED,eAAe,EAAE;EAAM,CAAC,EAAE;IAAEE,gBAAgB,EAAEb;EAAkB,CAAC,CAAC;EACpF;AACF;AACA;EACEc,kBAAkB,EAAE,CAAC;IAAEV,eAAe,EAAE;MAAEP,KAAK,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI;EAAE,CAAC,EAAE;IAAEiB,WAAW,EAAE;EAAM,CAAC,CAAC;EAC/F;AACF;AACA;EACEC,kBAAkB,EAAE,CAAC;IAAEZ,eAAe,EAAE;MAAEP,KAAK,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI;EAAE,CAAC,EAAE;IAAEiB,WAAW,EAAE;EAAM,CAAC,CAAC;EAC/F;AACF;AACA;AACA;EACEE,QAAQ,EAAE,CACR;IAAEC,gBAAgB,EAAElB;EAAkB,CAAC,EACvC;IAAEI,eAAe,EAAER;EAAmB,CAAC,EACvC;IAAEiB,gBAAgB,EAAEb;EAAkB,CAAC,EACvC;IAAEW,eAAe,EAAEf;EAAmB,CAAC,CACxC;EACD;AACF;AACA;AACA;EACEuB,SAAS,EAAE,CACT;IAAED,gBAAgB,EAAElB;EAAkB,CAAC,EACvC;IAAEI,eAAe,EAAEL;EAAoB,CAAC,EACxC;IAAEc,gBAAgB,EAAEb;EAAkB,CAAC,EACvC;IAAEW,eAAe,EAAEZ;EAAoB,CAAC;AAE5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}