{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nvar latLngRegExp = /^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)$/;\nexport function aroundLatLngToPosition(value) {\n  var pattern = value.match(latLngRegExp);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!pattern) {\n    throw new Error(\"Invalid value for \\\"aroundLatLng\\\" parameter: \\\"\".concat(value, \"\\\"\"));\n  }\n  return {\n    lat: parseFloat(pattern[1]),\n    lng: parseFloat(pattern[2])\n  };\n}\nfunction insideBoundingBoxArrayToBoundingBox(value) {\n  var _value = _slicedToArray(value, 1),\n    _value$ = _value[0],\n    _value$2 = _value$ === void 0 ? [undefined, undefined, undefined, undefined] : _value$,\n    _value$3 = _slicedToArray(_value$2, 4),\n    neLat = _value$3[0],\n    neLng = _value$3[1],\n    swLat = _value$3[2],\n    swLng = _value$3[3];\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\"Invalid value for \\\"insideBoundingBox\\\" parameter: [\".concat(value, \"]\"));\n  }\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng\n    }\n  };\n}\nfunction insideBoundingBoxStringToBoundingBox(value) {\n  var _value$split$map = value.split(',').map(parseFloat),\n    _value$split$map2 = _slicedToArray(_value$split$map, 4),\n    neLat = _value$split$map2[0],\n    neLng = _value$split$map2[1],\n    swLat = _value$split$map2[2],\n    swLng = _value$split$map2[3];\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\"Invalid value for \\\"insideBoundingBox\\\" parameter: \\\"\".concat(value, \"\\\"\"));\n  }\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng\n    }\n  };\n}\nexport function insideBoundingBoxToBoundingBox(value) {\n  if (Array.isArray(value)) {\n    return insideBoundingBoxArrayToBoundingBox(value);\n  }\n  return insideBoundingBoxStringToBoundingBox(value);\n}","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","latLngRegExp","aroundLatLngToPosition","pattern","match","Error","concat","lat","parseFloat","lng","insideBoundingBoxArrayToBoundingBox","_value","_value$","_value$2","undefined","_value$3","neLat","neLng","swLat","swLng","northEast","southWest","insideBoundingBoxStringToBoundingBox","_value$split$map","split","map","_value$split$map2","insideBoundingBoxToBoundingBox"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/node_modules/instantsearch.js/es/lib/utils/geo-search.js"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar latLngRegExp = /^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)$/;\nexport function aroundLatLngToPosition(value) {\n  var pattern = value.match(latLngRegExp);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!pattern) {\n    throw new Error(\"Invalid value for \\\"aroundLatLng\\\" parameter: \\\"\".concat(value, \"\\\"\"));\n  }\n  return {\n    lat: parseFloat(pattern[1]),\n    lng: parseFloat(pattern[2])\n  };\n}\nfunction insideBoundingBoxArrayToBoundingBox(value) {\n  var _value = _slicedToArray(value, 1),\n    _value$ = _value[0],\n    _value$2 = _value$ === void 0 ? [undefined, undefined, undefined, undefined] : _value$,\n    _value$3 = _slicedToArray(_value$2, 4),\n    neLat = _value$3[0],\n    neLng = _value$3[1],\n    swLat = _value$3[2],\n    swLng = _value$3[3];\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\"Invalid value for \\\"insideBoundingBox\\\" parameter: [\".concat(value, \"]\"));\n  }\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng\n    }\n  };\n}\nfunction insideBoundingBoxStringToBoundingBox(value) {\n  var _value$split$map = value.split(',').map(parseFloat),\n    _value$split$map2 = _slicedToArray(_value$split$map, 4),\n    neLat = _value$split$map2[0],\n    neLng = _value$split$map2[1],\n    swLat = _value$split$map2[2],\n    swLng = _value$split$map2[3];\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\"Invalid value for \\\"insideBoundingBox\\\" parameter: \\\"\".concat(value, \"\\\"\"));\n  }\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng\n    }\n  };\n}\nexport function insideBoundingBoxToBoundingBox(value) {\n  if (Array.isArray(value)) {\n    return insideBoundingBoxArrayToBoundingBox(value);\n  }\n  return insideBoundingBoxStringToBoundingBox(value);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}