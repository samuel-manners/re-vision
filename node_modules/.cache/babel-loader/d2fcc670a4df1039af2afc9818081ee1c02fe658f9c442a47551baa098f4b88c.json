{"ast":null,"code":"// Convert data URI to binary array\nexport function dataURItoBlob(dataURI) {\n  // Split the data URI into parts\n  let parts = dataURI.split(\",\");\n  // Get the content type (image/jpeg)\n  let type = parts[0].split(\":\")[1].split(\";\")[0];\n  // Decode the base64 data\n  let data = atob(parts[1]);\n  // Create a binary array\n  let array = [];\n  for (var i = 0; i < data.length; i++) {\n    array.push(data.charCodeAt(i));\n  }\n  // Return a Blob object\n  return new Blob([new Uint8Array(array)], {\n    type: type\n  });\n}","map":{"version":3,"names":["dataURItoBlob","dataURI","parts","split","type","data","atob","array","i","length","push","charCodeAt","Blob","Uint8Array"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/src/components/main/functions/dataURItoBlob.js"],"sourcesContent":["// Convert data URI to binary array\r\nexport function dataURItoBlob(dataURI) {\r\n    // Split the data URI into parts\r\n    let parts = dataURI.split(\",\");\r\n    // Get the content type (image/jpeg)\r\n    let type = parts[0].split(\":\")[1].split(\";\")[0];\r\n    // Decode the base64 data\r\n    let data = atob(parts[1]);\r\n    // Create a binary array\r\n    let array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n        array.push(data.charCodeAt(i));\r\n    }\r\n    // Return a Blob object\r\n    return new Blob([new Uint8Array(array)], { type: type });\r\n}"],"mappings":"AAAA;AACA,OAAO,SAASA,aAAaA,CAACC,OAAO,EAAE;EACnC;EACA,IAAIC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;EAC9B;EACA,IAAIC,IAAI,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/C;EACA,IAAIE,IAAI,GAAGC,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;EACzB;EACA,IAAIK,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAClCD,KAAK,CAACG,IAAI,CAACL,IAAI,CAACM,UAAU,CAACH,CAAC,CAAC,CAAC;EAClC;EACA;EACA,OAAO,IAAII,IAAI,CAAC,CAAC,IAAIC,UAAU,CAACN,KAAK,CAAC,CAAC,EAAE;IAAEH,IAAI,EAAEA;EAAK,CAAC,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}