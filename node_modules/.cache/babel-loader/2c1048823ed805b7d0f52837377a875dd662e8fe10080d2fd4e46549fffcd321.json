{"ast":null,"code":"'use strict';\n\n/**\n * Cache results of the first function call to ensure only calling once.\n *\n * ```js\n * var utils = require('lazy-cache')(require);\n * // cache the call to `require('ansi-yellow')`\n * utils('ansi-yellow', 'yellow');\n * // use `ansi-yellow`\n * console.log(utils.yellow('this is yellow'));\n * ```\n *\n * @param  {Function} `fn` Function that will be called only once.\n * @return {Function} Function that can be called to get the cached function\n * @api public\n */\nfunction lazyCache(fn) {\n  var cache = {};\n  var proxy = function (mod, name) {\n    name = name || camelcase(mod);\n\n    // check both boolean and string in case `process.env` cases to string\n    if (process.env.UNLAZY === 'true' || process.env.UNLAZY === true || process.env.TRAVIS) {\n      cache[name] = fn(mod);\n    }\n    Object.defineProperty(proxy, name, {\n      enumerable: true,\n      configurable: true,\n      get: getter\n    });\n    function getter() {\n      if (cache.hasOwnProperty(name)) {\n        return cache[name];\n      }\n      return cache[name] = fn(mod);\n    }\n    return getter;\n  };\n  return proxy;\n}\n\n/**\n * Used to camelcase the name to be stored on the `lazy` object.\n *\n * @param  {String} `str` String containing `_`, `.`, `-` or whitespace that will be camelcased.\n * @return {String} camelcased string.\n */\n\nfunction camelcase(str) {\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n  str = str.replace(/^[\\W_]+|[\\W_]+$/g, '').toLowerCase();\n  return str.replace(/[\\W_]+(\\w|$)/g, function (_, ch) {\n    return ch.toUpperCase();\n  });\n}\n\n/**\n * Expose `lazyCache`\n */\n\nmodule.exports = lazyCache;","map":{"version":3,"names":["lazyCache","fn","cache","proxy","mod","name","camelcase","process","env","UNLAZY","TRAVIS","Object","defineProperty","enumerable","configurable","get","getter","hasOwnProperty","str","length","toLowerCase","replace","_","ch","toUpperCase","module","exports"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/node_modules/lazy-cache/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Cache results of the first function call to ensure only calling once.\n *\n * ```js\n * var utils = require('lazy-cache')(require);\n * // cache the call to `require('ansi-yellow')`\n * utils('ansi-yellow', 'yellow');\n * // use `ansi-yellow`\n * console.log(utils.yellow('this is yellow'));\n * ```\n *\n * @param  {Function} `fn` Function that will be called only once.\n * @return {Function} Function that can be called to get the cached function\n * @api public\n */\n\nfunction lazyCache(fn) {\n  var cache = {};\n  var proxy = function(mod, name) {\n    name = name || camelcase(mod);\n\n    // check both boolean and string in case `process.env` cases to string\n    if (process.env.UNLAZY === 'true' || process.env.UNLAZY === true || process.env.TRAVIS) {\n      cache[name] = fn(mod);\n    }\n\n    Object.defineProperty(proxy, name, {\n      enumerable: true,\n      configurable: true,\n      get: getter\n    });\n\n    function getter() {\n      if (cache.hasOwnProperty(name)) {\n        return cache[name];\n      }\n      return (cache[name] = fn(mod));\n    }\n    return getter;\n  };\n  return proxy;\n}\n\n/**\n * Used to camelcase the name to be stored on the `lazy` object.\n *\n * @param  {String} `str` String containing `_`, `.`, `-` or whitespace that will be camelcased.\n * @return {String} camelcased string.\n */\n\nfunction camelcase(str) {\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n  str = str.replace(/^[\\W_]+|[\\W_]+$/g, '').toLowerCase();\n  return str.replace(/[\\W_]+(\\w|$)/g, function(_, ch) {\n    return ch.toUpperCase();\n  });\n}\n\n/**\n * Expose `lazyCache`\n */\n\nmodule.exports = lazyCache;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAASA,CAACC,EAAE,EAAE;EACrB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,KAAK,GAAG,SAAAA,CAASC,GAAG,EAAEC,IAAI,EAAE;IAC9BA,IAAI,GAAGA,IAAI,IAAIC,SAAS,CAACF,GAAG,CAAC;;IAE7B;IACA,IAAIG,OAAO,CAACC,GAAG,CAACC,MAAM,KAAK,MAAM,IAAIF,OAAO,CAACC,GAAG,CAACC,MAAM,KAAK,IAAI,IAAIF,OAAO,CAACC,GAAG,CAACE,MAAM,EAAE;MACtFR,KAAK,CAACG,IAAI,CAAC,GAAGJ,EAAE,CAACG,GAAG,CAAC;IACvB;IAEAO,MAAM,CAACC,cAAc,CAACT,KAAK,EAAEE,IAAI,EAAE;MACjCQ,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,GAAG,EAAEC;IACP,CAAC,CAAC;IAEF,SAASA,MAAMA,CAAA,EAAG;MAChB,IAAId,KAAK,CAACe,cAAc,CAACZ,IAAI,CAAC,EAAE;QAC9B,OAAOH,KAAK,CAACG,IAAI,CAAC;MACpB;MACA,OAAQH,KAAK,CAACG,IAAI,CAAC,GAAGJ,EAAE,CAACG,GAAG,CAAC;IAC/B;IACA,OAAOY,MAAM;EACf,CAAC;EACD,OAAOb,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,SAASA,CAACY,GAAG,EAAE;EACtB,IAAIA,GAAG,CAACC,MAAM,KAAK,CAAC,EAAE;IACpB,OAAOD,GAAG,CAACE,WAAW,CAAC,CAAC;EAC1B;EACAF,GAAG,GAAGA,GAAG,CAACG,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAACD,WAAW,CAAC,CAAC;EACvD,OAAOF,GAAG,CAACG,OAAO,CAAC,eAAe,EAAE,UAASC,CAAC,EAAEC,EAAE,EAAE;IAClD,OAAOA,EAAE,CAACC,WAAW,CAAC,CAAC;EACzB,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG1B,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}