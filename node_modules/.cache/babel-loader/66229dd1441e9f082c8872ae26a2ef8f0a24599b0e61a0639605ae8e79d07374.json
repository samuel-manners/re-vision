{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nimport { getInsightsAnonymousUserTokenInternal } from \"../helpers/index.js\";\nimport { warning, noop, getAppIdAndApiKey, find, safelyRunOnBrowser } from \"../lib/utils/index.js\";\nvar ALGOLIA_INSIGHTS_VERSION = '2.13.0';\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nexport function createInsightsMiddleware() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _insightsClient = props.insightsClient,\n    insightsInitParams = props.insightsInitParams,\n    onEvent = props.onEvent,\n    _props$$$internal = props.$$internal,\n    $$internal = _props$$$internal === void 0 ? false : _props$$$internal,\n    _props$$$automatic = props.$$automatic,\n    $$automatic = _props$$$automatic === void 0 ? false : _props$$$automatic;\n  var potentialInsightsClient = _insightsClient;\n  if (!_insightsClient && _insightsClient !== null) {\n    safelyRunOnBrowser(function (_ref) {\n      var window = _ref.window;\n      var pointer = window.AlgoliaAnalyticsObject || 'aa';\n      if (typeof pointer === 'string') {\n        potentialInsightsClient = window[pointer];\n      }\n      if (!potentialInsightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n        if (!window[pointer]) {\n          window[pointer] = function () {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            window[pointer].queue.push(args);\n          };\n          window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n          window[pointer].shouldAddScript = true;\n        }\n        potentialInsightsClient = window[pointer];\n      }\n    });\n  }\n  // if still no insightsClient was found, we use a noop\n  var insightsClient = potentialInsightsClient || noop;\n  return function (_ref2) {\n    var instantSearchInstance = _ref2.instantSearchInstance;\n    // remove existing default insights middleware\n    // user-provided insights middleware takes precedence\n    var existingInsightsMiddlewares = instantSearchInstance.middleware.filter(function (m) {\n      return m.instance.$$type === 'ais.insights' && m.instance.$$internal;\n    }).map(function (m) {\n      return m.creator;\n    });\n    instantSearchInstance.unuse.apply(instantSearchInstance, _toConsumableArray(existingInsightsMiddlewares));\n    var _getAppIdAndApiKey = getAppIdAndApiKey(instantSearchInstance.client),\n      _getAppIdAndApiKey2 = _slicedToArray(_getAppIdAndApiKey, 2),\n      appId = _getAppIdAndApiKey2[0],\n      apiKey = _getAppIdAndApiKey2[1];\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    process.env.NODE_ENV === 'development' ? warning(Boolean(appId && apiKey), 'could not extract Algolia credentials from searchClient in insights middleware.') : void 0;\n    var queuedUserToken = undefined;\n    var queuedAuthenticatedUserToken = undefined;\n    var userTokenBeforeInit = undefined;\n    var authenticatedUserTokenBeforeInit = undefined;\n    var queue = insightsClient.queue;\n    if (Array.isArray(queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      var _map = ['setUserToken', 'setAuthenticatedUserToken'].map(function (key) {\n        var _ref3 = find(queue.slice().reverse(), function (_ref5) {\n            var _ref6 = _slicedToArray(_ref5, 1),\n              method = _ref6[0];\n            return method === key;\n          }) || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          value = _ref4[1];\n        return value;\n      });\n      var _map2 = _slicedToArray(_map, 2);\n      queuedUserToken = _map2[0];\n      queuedAuthenticatedUserToken = _map2[1];\n    }\n\n    // If user called `aa('setUserToken')` or `aa('setAuthenticatedUserToken')`\n    // before creating the Insights middleware, we temporarily store the token\n    // and set it later on.\n    //\n    // Otherwise, the `init` call might override them with anonymous user token.\n    insightsClient('getUserToken', null, function (_error, userToken) {\n      userTokenBeforeInit = normalizeUserToken(userToken);\n    });\n    insightsClient('getAuthenticatedUserToken', null, function (_error, userToken) {\n      authenticatedUserTokenBeforeInit = normalizeUserToken(userToken);\n    });\n\n    // Only `init` if the `insightsInitParams` option is passed or\n    // if the `insightsClient` version doesn't supports optional `init` calling.\n    if (insightsInitParams || !isModernInsightsClient(insightsClient)) {\n      insightsClient('init', _objectSpread({\n        appId: appId,\n        apiKey: apiKey,\n        partial: true\n      }, insightsInitParams));\n    }\n    var initialParameters;\n    var helper;\n    return {\n      $$type: 'ais.insights',\n      $$internal: $$internal,\n      $$automatic: $$automatic,\n      onStateChange: function onStateChange() {},\n      subscribe: function subscribe() {\n        if (!insightsClient.shouldAddScript) return;\n        var errorMessage = '[insights middleware]: could not load search-insights.js. Please load it manually following https://alg.li/insights-init';\n        try {\n          var script = document.createElement('script');\n          script.async = true;\n          script.src = ALGOLIA_INSIGHTS_SRC;\n          script.onerror = function () {\n            instantSearchInstance.emit('error', new Error(errorMessage));\n          };\n          document.body.appendChild(script);\n          insightsClient.shouldAddScript = false;\n        } catch (cause) {\n          insightsClient.shouldAddScript = false;\n          instantSearchInstance.emit('error', new Error(errorMessage));\n        }\n      },\n      started: function started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n        helper = instantSearchInstance.mainHelper;\n        initialParameters = {\n          userToken: helper.state.userToken,\n          clickAnalytics: helper.state.clickAnalytics\n        };\n\n        // We don't want to force clickAnalytics when the insights is enabled from the search response.\n        // This means we don't enable insights for indices that don't opt in\n        if (!$$automatic) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n            clickAnalytics: true\n          }));\n        }\n        if (!$$internal) {\n          instantSearchInstance.scheduleSearch();\n        }\n        var setUserTokenToSearch = function setUserTokenToSearch(userToken) {\n          var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var normalizedUserToken = normalizeUserToken(userToken);\n          if (!normalizedUserToken) {\n            return;\n          }\n          var existingToken = helper.state.userToken;\n          function applyToken() {\n            helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n              userToken: normalizedUserToken\n            }));\n            if (existingToken && existingToken !== userToken) {\n              instantSearchInstance.scheduleSearch();\n            }\n          }\n\n          // Delay the token application to the next render cycle\n          if (!immediate) {\n            setTimeout(applyToken, 0);\n          } else {\n            applyToken();\n          }\n        };\n        var anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n        if (anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken, true);\n        }\n        function setUserToken(token, userToken, authenticatedUserToken) {\n          setUserTokenToSearch(token, true);\n          if (userToken) {\n            insightsClient('setUserToken', userToken);\n          }\n          if (authenticatedUserToken) {\n            insightsClient('setAuthenticatedUserToken', authenticatedUserToken);\n          }\n        }\n\n        // We consider the `userToken` or `authenticatedUserToken` before an\n        // `init` call of higher importance than one from the queue.\n        var tokenBeforeInit = authenticatedUserTokenBeforeInit || userTokenBeforeInit;\n        var queuedToken = queuedAuthenticatedUserToken || queuedUserToken;\n        if (tokenBeforeInit) {\n          setUserToken(tokenBeforeInit, userTokenBeforeInit, authenticatedUserTokenBeforeInit);\n        } else if (queuedToken) {\n          setUserToken(queuedToken, queuedUserToken, queuedAuthenticatedUserToken);\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true\n        });\n\n        // This updates userToken which is set explicitly by `aa('setAuthenticatedtUserToken', authenticatedUserToken)`\n        insightsClient('onAuthenticatedUserTokenChange', function (authenticatedUserToken) {\n          // If we're unsetting the `authenticatedUserToken`, we revert to the `userToken`\n          if (!authenticatedUserToken) {\n            insightsClient('getUserToken', null, function (_, userToken) {\n              setUserTokenToSearch(userToken);\n            });\n          }\n          setUserTokenToSearch(authenticatedUserToken);\n        }, {\n          immediate: true\n        });\n        var insightsClientWithLocalCredentials = insightsClient;\n        if (isModernInsightsClient(insightsClient)) {\n          insightsClientWithLocalCredentials = function insightsClientWithLocalCredentials(method, payload) {\n            var extraParams = {\n              headers: {\n                'X-Algolia-Application-Id': appId,\n                'X-Algolia-API-Key': apiKey\n              }\n            };\n\n            // @ts-ignore we are calling this only when we know that the client actually is correct\n            return insightsClient(method, payload, extraParams);\n          };\n        }\n        instantSearchInstance.sendEventToInsights = function (event) {\n          if (onEvent) {\n            onEvent(event, insightsClientWithLocalCredentials);\n          } else if (event.insightsMethod) {\n            // Source is used to differentiate events sent by instantsearch from those sent manually.\n            event.payload.algoliaSource = ['instantsearch'];\n            if ($$automatic) {\n              event.payload.algoliaSource.push('instantsearch-automatic');\n            }\n            if (event.eventModifier === 'internal') {\n              event.payload.algoliaSource.push('instantsearch-internal');\n            }\n            insightsClientWithLocalCredentials(event.insightsMethod, event.payload);\n            process.env.NODE_ENV === 'development' ? warning(Boolean(helper.state.userToken), \"\\nCannot send event to Algolia Insights because `userToken` is not set.\\n\\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\\n\") : void 0;\n          } else {\n            process.env.NODE_ENV === 'development' ? warning(false, 'Cannot send event to Algolia Insights because `insightsMethod` option is missing.') : void 0;\n          }\n        };\n      },\n      unsubscribe: function unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        insightsClient('onAuthenticatedUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), initialParameters));\n          instantSearchInstance.scheduleSearch();\n        }\n      }\n    };\n  };\n}\n\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nfunction isModernInsightsClient(client) {\n  var _split$map = (client.version || '').split('.').map(Number),\n    _split$map2 = _slicedToArray(_split$map, 2),\n    major = _split$map2[0],\n    minor = _split$map2[1];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  var v3 = major >= 3;\n  var v2_6 = major === 2 && minor >= 6;\n  var v1_10 = major === 1 && minor >= 10;\n  /* eslint-enable @typescript-eslint/naming-convention */\n\n  return v3 || v2_6 || v1_10;\n}\n\n/**\n * While `search-insights` supports both string and number user tokens,\n * the Search API only accepts strings. This function normalizes the user token.\n */\nfunction normalizeUserToken(userToken) {\n  if (!userToken) {\n    return undefined;\n  }\n  return typeof userToken === 'number' ? userToken.toString() : userToken;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","err","return","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","iter","len","arr2","getInsightsAnonymousUserTokenInternal","warning","noop","getAppIdAndApiKey","find","safelyRunOnBrowser","ALGOLIA_INSIGHTS_VERSION","ALGOLIA_INSIGHTS_SRC","concat","createInsightsMiddleware","props","_insightsClient","insightsClient","insightsInitParams","onEvent","_props$$$internal","$$internal","_props$$$automatic","$$automatic","potentialInsightsClient","_ref","window","pointer","AlgoliaAnalyticsObject","queue","_len","args","_key","version","shouldAddScript","_ref2","instantSearchInstance","existingInsightsMiddlewares","middleware","m","instance","$$type","map","creator","unuse","_getAppIdAndApiKey","client","_getAppIdAndApiKey2","appId","apiKey","process","env","NODE_ENV","Boolean","queuedUserToken","queuedAuthenticatedUserToken","userTokenBeforeInit","authenticatedUserTokenBeforeInit","_map","_ref3","reverse","_ref5","_ref6","method","_ref4","_map2","_error","userToken","normalizeUserToken","isModernInsightsClient","partial","initialParameters","helper","onStateChange","subscribe","errorMessage","script","document","createElement","async","src","onerror","emit","Error","body","appendChild","cause","started","mainHelper","state","clickAnalytics","overrideStateWithoutTriggeringChangeEvent","scheduleSearch","setUserTokenToSearch","immediate","normalizedUserToken","existingToken","applyToken","setTimeout","anonymousUserToken","setUserToken","token","authenticatedUserToken","tokenBeforeInit","queuedToken","_","insightsClientWithLocalCredentials","payload","extraParams","headers","sendEventToInsights","event","insightsMethod","algoliaSource","eventModifier","unsubscribe","_split$map","split","_split$map2","major","minor","v3","v2_6","v1_10"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/node_modules/instantsearch.js/es/middlewares/createInsightsMiddleware.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { getInsightsAnonymousUserTokenInternal } from \"../helpers/index.js\";\nimport { warning, noop, getAppIdAndApiKey, find, safelyRunOnBrowser } from \"../lib/utils/index.js\";\nvar ALGOLIA_INSIGHTS_VERSION = '2.13.0';\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nexport function createInsightsMiddleware() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _insightsClient = props.insightsClient,\n    insightsInitParams = props.insightsInitParams,\n    onEvent = props.onEvent,\n    _props$$$internal = props.$$internal,\n    $$internal = _props$$$internal === void 0 ? false : _props$$$internal,\n    _props$$$automatic = props.$$automatic,\n    $$automatic = _props$$$automatic === void 0 ? false : _props$$$automatic;\n  var potentialInsightsClient = _insightsClient;\n  if (!_insightsClient && _insightsClient !== null) {\n    safelyRunOnBrowser(function (_ref) {\n      var window = _ref.window;\n      var pointer = window.AlgoliaAnalyticsObject || 'aa';\n      if (typeof pointer === 'string') {\n        potentialInsightsClient = window[pointer];\n      }\n      if (!potentialInsightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n        if (!window[pointer]) {\n          window[pointer] = function () {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            window[pointer].queue.push(args);\n          };\n          window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n          window[pointer].shouldAddScript = true;\n        }\n        potentialInsightsClient = window[pointer];\n      }\n    });\n  }\n  // if still no insightsClient was found, we use a noop\n  var insightsClient = potentialInsightsClient || noop;\n  return function (_ref2) {\n    var instantSearchInstance = _ref2.instantSearchInstance;\n    // remove existing default insights middleware\n    // user-provided insights middleware takes precedence\n    var existingInsightsMiddlewares = instantSearchInstance.middleware.filter(function (m) {\n      return m.instance.$$type === 'ais.insights' && m.instance.$$internal;\n    }).map(function (m) {\n      return m.creator;\n    });\n    instantSearchInstance.unuse.apply(instantSearchInstance, _toConsumableArray(existingInsightsMiddlewares));\n    var _getAppIdAndApiKey = getAppIdAndApiKey(instantSearchInstance.client),\n      _getAppIdAndApiKey2 = _slicedToArray(_getAppIdAndApiKey, 2),\n      appId = _getAppIdAndApiKey2[0],\n      apiKey = _getAppIdAndApiKey2[1];\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    process.env.NODE_ENV === 'development' ? warning(Boolean(appId && apiKey), 'could not extract Algolia credentials from searchClient in insights middleware.') : void 0;\n    var queuedUserToken = undefined;\n    var queuedAuthenticatedUserToken = undefined;\n    var userTokenBeforeInit = undefined;\n    var authenticatedUserTokenBeforeInit = undefined;\n    var queue = insightsClient.queue;\n    if (Array.isArray(queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      var _map = ['setUserToken', 'setAuthenticatedUserToken'].map(function (key) {\n        var _ref3 = find(queue.slice().reverse(), function (_ref5) {\n            var _ref6 = _slicedToArray(_ref5, 1),\n              method = _ref6[0];\n            return method === key;\n          }) || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          value = _ref4[1];\n        return value;\n      });\n      var _map2 = _slicedToArray(_map, 2);\n      queuedUserToken = _map2[0];\n      queuedAuthenticatedUserToken = _map2[1];\n    }\n\n    // If user called `aa('setUserToken')` or `aa('setAuthenticatedUserToken')`\n    // before creating the Insights middleware, we temporarily store the token\n    // and set it later on.\n    //\n    // Otherwise, the `init` call might override them with anonymous user token.\n    insightsClient('getUserToken', null, function (_error, userToken) {\n      userTokenBeforeInit = normalizeUserToken(userToken);\n    });\n    insightsClient('getAuthenticatedUserToken', null, function (_error, userToken) {\n      authenticatedUserTokenBeforeInit = normalizeUserToken(userToken);\n    });\n\n    // Only `init` if the `insightsInitParams` option is passed or\n    // if the `insightsClient` version doesn't supports optional `init` calling.\n    if (insightsInitParams || !isModernInsightsClient(insightsClient)) {\n      insightsClient('init', _objectSpread({\n        appId: appId,\n        apiKey: apiKey,\n        partial: true\n      }, insightsInitParams));\n    }\n    var initialParameters;\n    var helper;\n    return {\n      $$type: 'ais.insights',\n      $$internal: $$internal,\n      $$automatic: $$automatic,\n      onStateChange: function onStateChange() {},\n      subscribe: function subscribe() {\n        if (!insightsClient.shouldAddScript) return;\n        var errorMessage = '[insights middleware]: could not load search-insights.js. Please load it manually following https://alg.li/insights-init';\n        try {\n          var script = document.createElement('script');\n          script.async = true;\n          script.src = ALGOLIA_INSIGHTS_SRC;\n          script.onerror = function () {\n            instantSearchInstance.emit('error', new Error(errorMessage));\n          };\n          document.body.appendChild(script);\n          insightsClient.shouldAddScript = false;\n        } catch (cause) {\n          insightsClient.shouldAddScript = false;\n          instantSearchInstance.emit('error', new Error(errorMessage));\n        }\n      },\n      started: function started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n        helper = instantSearchInstance.mainHelper;\n        initialParameters = {\n          userToken: helper.state.userToken,\n          clickAnalytics: helper.state.clickAnalytics\n        };\n\n        // We don't want to force clickAnalytics when the insights is enabled from the search response.\n        // This means we don't enable insights for indices that don't opt in\n        if (!$$automatic) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n            clickAnalytics: true\n          }));\n        }\n        if (!$$internal) {\n          instantSearchInstance.scheduleSearch();\n        }\n        var setUserTokenToSearch = function setUserTokenToSearch(userToken) {\n          var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var normalizedUserToken = normalizeUserToken(userToken);\n          if (!normalizedUserToken) {\n            return;\n          }\n          var existingToken = helper.state.userToken;\n          function applyToken() {\n            helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n              userToken: normalizedUserToken\n            }));\n            if (existingToken && existingToken !== userToken) {\n              instantSearchInstance.scheduleSearch();\n            }\n          }\n\n          // Delay the token application to the next render cycle\n          if (!immediate) {\n            setTimeout(applyToken, 0);\n          } else {\n            applyToken();\n          }\n        };\n        var anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n        if (anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken, true);\n        }\n        function setUserToken(token, userToken, authenticatedUserToken) {\n          setUserTokenToSearch(token, true);\n          if (userToken) {\n            insightsClient('setUserToken', userToken);\n          }\n          if (authenticatedUserToken) {\n            insightsClient('setAuthenticatedUserToken', authenticatedUserToken);\n          }\n        }\n\n        // We consider the `userToken` or `authenticatedUserToken` before an\n        // `init` call of higher importance than one from the queue.\n        var tokenBeforeInit = authenticatedUserTokenBeforeInit || userTokenBeforeInit;\n        var queuedToken = queuedAuthenticatedUserToken || queuedUserToken;\n        if (tokenBeforeInit) {\n          setUserToken(tokenBeforeInit, userTokenBeforeInit, authenticatedUserTokenBeforeInit);\n        } else if (queuedToken) {\n          setUserToken(queuedToken, queuedUserToken, queuedAuthenticatedUserToken);\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true\n        });\n\n        // This updates userToken which is set explicitly by `aa('setAuthenticatedtUserToken', authenticatedUserToken)`\n        insightsClient('onAuthenticatedUserTokenChange', function (authenticatedUserToken) {\n          // If we're unsetting the `authenticatedUserToken`, we revert to the `userToken`\n          if (!authenticatedUserToken) {\n            insightsClient('getUserToken', null, function (_, userToken) {\n              setUserTokenToSearch(userToken);\n            });\n          }\n          setUserTokenToSearch(authenticatedUserToken);\n        }, {\n          immediate: true\n        });\n        var insightsClientWithLocalCredentials = insightsClient;\n        if (isModernInsightsClient(insightsClient)) {\n          insightsClientWithLocalCredentials = function insightsClientWithLocalCredentials(method, payload) {\n            var extraParams = {\n              headers: {\n                'X-Algolia-Application-Id': appId,\n                'X-Algolia-API-Key': apiKey\n              }\n            };\n\n            // @ts-ignore we are calling this only when we know that the client actually is correct\n            return insightsClient(method, payload, extraParams);\n          };\n        }\n        instantSearchInstance.sendEventToInsights = function (event) {\n          if (onEvent) {\n            onEvent(event, insightsClientWithLocalCredentials);\n          } else if (event.insightsMethod) {\n            // Source is used to differentiate events sent by instantsearch from those sent manually.\n            event.payload.algoliaSource = ['instantsearch'];\n            if ($$automatic) {\n              event.payload.algoliaSource.push('instantsearch-automatic');\n            }\n            if (event.eventModifier === 'internal') {\n              event.payload.algoliaSource.push('instantsearch-internal');\n            }\n            insightsClientWithLocalCredentials(event.insightsMethod, event.payload);\n            process.env.NODE_ENV === 'development' ? warning(Boolean(helper.state.userToken), \"\\nCannot send event to Algolia Insights because `userToken` is not set.\\n\\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\\n\") : void 0;\n          } else {\n            process.env.NODE_ENV === 'development' ? warning(false, 'Cannot send event to Algolia Insights because `insightsMethod` option is missing.') : void 0;\n          }\n        };\n      },\n      unsubscribe: function unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        insightsClient('onAuthenticatedUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), initialParameters));\n          instantSearchInstance.scheduleSearch();\n        }\n      }\n    };\n  };\n}\n\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nfunction isModernInsightsClient(client) {\n  var _split$map = (client.version || '').split('.').map(Number),\n    _split$map2 = _slicedToArray(_split$map, 2),\n    major = _split$map2[0],\n    minor = _split$map2[1];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  var v3 = major >= 3;\n  var v2_6 = major === 2 && minor >= 6;\n  var v1_10 = major === 1 && minor >= 10;\n  /* eslint-enable @typescript-eslint/naming-convention */\n\n  return v3 || v2_6 || v1_10;\n}\n\n/**\n * While `search-insights` supports both string and number user tokens,\n * the Search API only accepts strings. This function normalizes the user token.\n */\nfunction normalizeUserToken(userToken) {\n  if (!userToken) {\n    return undefined;\n  }\n  return typeof userToken === 'number' ? userToken.toString() : userToken;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}