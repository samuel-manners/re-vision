{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nimport { warning, serializePayload, deserializePayload } from \"../lib/utils/index.js\";\n/** @deprecated use bindEvent instead */\nexport function readDataAttributes(domElement) {\n  var method = domElement.getAttribute('data-insights-method');\n  var serializedPayload = domElement.getAttribute('data-insights-payload');\n  if (typeof serializedPayload !== 'string') {\n    throw new Error('The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.');\n  }\n  try {\n    var payload = deserializePayload(serializedPayload);\n    return {\n      method: method,\n      payload: payload\n    };\n  } catch (error) {\n    throw new Error('The insights helper was unable to parse `data-insights-payload`.');\n  }\n}\n\n/** @deprecated use bindEvent instead */\nexport function writeDataAttributes(_ref) {\n  var method = _ref.method,\n    payload = _ref.payload;\n  if (_typeof(payload) !== 'object') {\n    throw new Error(\"The insights helper expects the payload to be an object.\");\n  }\n  var serializedPayload;\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(\"Could not JSON serialize the payload object.\");\n  }\n  return \"data-insights-method=\\\"\".concat(method, \"\\\" data-insights-payload=\\\"\").concat(serializedPayload, \"\\\"\");\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function insights(method, payload) {\n  process.env.NODE_ENV === 'development' ? warning(false, \"`insights` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the `insights` middleware.\\n\\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\") : void 0;\n  return writeDataAttributes({\n    method: method,\n    payload: payload\n  });\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","warning","serializePayload","deserializePayload","readDataAttributes","domElement","method","getAttribute","serializedPayload","Error","payload","error","writeDataAttributes","_ref","concat","insights","process","env","NODE_ENV"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/node_modules/instantsearch.js/es/helpers/insights.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport { warning, serializePayload, deserializePayload } from \"../lib/utils/index.js\";\n/** @deprecated use bindEvent instead */\nexport function readDataAttributes(domElement) {\n  var method = domElement.getAttribute('data-insights-method');\n  var serializedPayload = domElement.getAttribute('data-insights-payload');\n  if (typeof serializedPayload !== 'string') {\n    throw new Error('The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.');\n  }\n  try {\n    var payload = deserializePayload(serializedPayload);\n    return {\n      method: method,\n      payload: payload\n    };\n  } catch (error) {\n    throw new Error('The insights helper was unable to parse `data-insights-payload`.');\n  }\n}\n\n/** @deprecated use bindEvent instead */\nexport function writeDataAttributes(_ref) {\n  var method = _ref.method,\n    payload = _ref.payload;\n  if (_typeof(payload) !== 'object') {\n    throw new Error(\"The insights helper expects the payload to be an object.\");\n  }\n  var serializedPayload;\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(\"Could not JSON serialize the payload object.\");\n  }\n  return \"data-insights-method=\\\"\".concat(method, \"\\\" data-insights-payload=\\\"\").concat(serializedPayload, \"\\\"\");\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function insights(method, payload) {\n  process.env.NODE_ENV === 'development' ? warning(false, \"`insights` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the `insights` middleware.\\n\\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\") : void 0;\n  return writeDataAttributes({\n    method: method,\n    payload: payload\n  });\n}"],"mappings":"AAAA,SAASA,OAAOA,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAOE,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUF,GAAG,EAAE;IAAE,OAAO,OAAOA,GAAG;EAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;IAAE,OAAOA,GAAG,IAAI,UAAU,IAAI,OAAOC,MAAM,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;EAAE,CAAC,EAAED,OAAO,CAACC,GAAG,CAAC;AAAE;AAC/U,SAASK,OAAO,EAAEC,gBAAgB,EAAEC,kBAAkB,QAAQ,uBAAuB;AACrF;AACA,OAAO,SAASC,kBAAkBA,CAACC,UAAU,EAAE;EAC7C,IAAIC,MAAM,GAAGD,UAAU,CAACE,YAAY,CAAC,sBAAsB,CAAC;EAC5D,IAAIC,iBAAiB,GAAGH,UAAU,CAACE,YAAY,CAAC,uBAAuB,CAAC;EACxE,IAAI,OAAOC,iBAAiB,KAAK,QAAQ,EAAE;IACzC,MAAM,IAAIC,KAAK,CAAC,yFAAyF,CAAC;EAC5G;EACA,IAAI;IACF,IAAIC,OAAO,GAAGP,kBAAkB,CAACK,iBAAiB,CAAC;IACnD,OAAO;MACLF,MAAM,EAAEA,MAAM;MACdI,OAAO,EAAEA;IACX,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIF,KAAK,CAAC,kEAAkE,CAAC;EACrF;AACF;;AAEA;AACA,OAAO,SAASG,mBAAmBA,CAACC,IAAI,EAAE;EACxC,IAAIP,MAAM,GAAGO,IAAI,CAACP,MAAM;IACtBI,OAAO,GAAGG,IAAI,CAACH,OAAO;EACxB,IAAIf,OAAO,CAACe,OAAO,CAAC,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAID,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,IAAID,iBAAiB;EACrB,IAAI;IACFA,iBAAiB,GAAGN,gBAAgB,CAACQ,OAAO,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIF,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAO,yBAAyB,CAACK,MAAM,CAACR,MAAM,EAAE,6BAA6B,CAAC,CAACQ,MAAM,CAACN,iBAAiB,EAAE,IAAI,CAAC;AAChH;;AAEA;AACA;AACA;AACA,eAAe,SAASO,QAAQA,CAACT,MAAM,EAAEI,OAAO,EAAE;EAChDM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GAAGjB,OAAO,CAAC,KAAK,EAAE,8VAA8V,CAAC,GAAG,KAAK,CAAC;EACha,OAAOW,mBAAmB,CAAC;IACzBN,MAAM,EAAEA,MAAM;IACdI,OAAO,EAAEA;EACX,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}