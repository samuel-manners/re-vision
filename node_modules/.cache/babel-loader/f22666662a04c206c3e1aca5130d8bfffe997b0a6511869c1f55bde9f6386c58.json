{"ast":null,"code":"import { useMemo } from 'react';\nimport { getCameraDevice } from '../devices/getCameraDevice';\nimport { useCameraDevices } from './useCameraDevices';\n\n/**\n * Get the best matching Camera device that best satisfies your requirements using a sorting filter.\n * @param position The position of the Camera device relative to the phone.\n * @param filter The filter you want to use. The Camera device that matches your filter the closest will be returned\n * @returns The Camera device that matches your filter the closest, or `undefined` if no such Camera Device exists on the given {@linkcode position}.\n * @example\n * ```ts\n * const device = useCameraDevice('back', {\n *    physicalDevices: ['wide-angle-camera']\n * })\n * ```\n */\nexport function useCameraDevice(position, filter) {\n  const devices = useCameraDevices();\n  const device = useMemo(() => getCameraDevice(devices, position, filter),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [devices, position, JSON.stringify(filter)]);\n  return device;\n}","map":{"version":3,"names":["useMemo","getCameraDevice","useCameraDevices","useCameraDevice","position","filter","devices","device","JSON","stringify"],"sources":["C:\\Users\\Samue\\OneDrive\\Documents\\University\\Year 3\\Computing Project\\Code\\RevisionWebApp\\re-vision\\node_modules\\react-native-vision-camera\\src\\hooks\\useCameraDevice.ts"],"sourcesContent":["import { useMemo } from 'react'\nimport { CameraDevice, CameraPosition } from '../CameraDevice'\nimport { getCameraDevice, DeviceFilter } from '../devices/getCameraDevice'\nimport { useCameraDevices } from './useCameraDevices'\n\n/**\n * Get the best matching Camera device that best satisfies your requirements using a sorting filter.\n * @param position The position of the Camera device relative to the phone.\n * @param filter The filter you want to use. The Camera device that matches your filter the closest will be returned\n * @returns The Camera device that matches your filter the closest, or `undefined` if no such Camera Device exists on the given {@linkcode position}.\n * @example\n * ```ts\n * const device = useCameraDevice('back', {\n *    physicalDevices: ['wide-angle-camera']\n * })\n * ```\n */\nexport function useCameraDevice(position: CameraPosition, filter?: DeviceFilter): CameraDevice | undefined {\n  const devices = useCameraDevices()\n\n  const device = useMemo(\n    () => getCameraDevice(devices, position, filter),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [devices, position, JSON.stringify(filter)],\n  )\n\n  return device\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,eAAe,QAAsB,4BAA4B;AAC1E,SAASC,gBAAgB,QAAQ,oBAAoB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,QAAwB,EAAEC,MAAqB,EAA4B;EACzG,MAAMC,OAAO,GAAGJ,gBAAgB,CAAC,CAAC;EAElC,MAAMK,MAAM,GAAGP,OAAO,CACpB,MAAMC,eAAe,CAACK,OAAO,EAAEF,QAAQ,EAAEC,MAAM,CAAC;EAChD;EACA,CAACC,OAAO,EAAEF,QAAQ,EAAEI,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC,CAC5C,CAAC;EAED,OAAOE,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}