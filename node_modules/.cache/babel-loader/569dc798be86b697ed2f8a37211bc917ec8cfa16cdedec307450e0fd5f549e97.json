{"ast":null,"code":"/**\n * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.\n */\n\n/**\n * Represents any kind of error that occured in the {@linkcode Camera} View Module.\n */\nclass CameraError extends Error {\n  get code() {\n    return this._code;\n  }\n  get message() {\n    return this._message;\n  }\n  get cause() {\n    const c = this._cause;\n    if (c == null) return undefined;\n    return new Error(`[${c.code}]: ${c.message}`);\n  }\n\n  /**\n   * @internal\n   */\n  constructor(code, message, cause) {\n    super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);\n    super.name = code;\n    super.message = message;\n    this._code = code;\n    this._message = message;\n    this._cause = cause;\n  }\n  toString() {\n    return `[${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * Represents any kind of error that occured while trying to capture a video or photo.\n *\n * See the [\"Camera Errors\" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraCaptureError extends CameraError {}\n\n/**\n * Represents any kind of error that occured in the Camera View Module.\n *\n * See the [\"Camera Errors\" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraRuntimeError extends CameraError {}\n\n/**\n * Checks if the given `error` is of type {@linkcode ErrorWithCause}\n * @param {unknown} error Any unknown object to validate\n * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}\n */\nexport const isErrorWithCause = error => typeof error === 'object' && error != null &&\n// @ts-expect-error error is still unknown\ntypeof error.message === 'string' && (\n// @ts-expect-error error is still unknown\ntypeof error.stacktrace === 'string' || error.stacktrace == null) && (\n// @ts-expect-error error is still unknown\nisErrorWithCause(error.cause) || error.cause == null);\nconst isCameraErrorJson = error => typeof error === 'object' && error != null &&\n// @ts-expect-error error is still unknown\ntypeof error.code === 'string' &&\n// @ts-expect-error error is still unknown\ntypeof error.message === 'string' && (\n// @ts-expect-error error is still unknown\ntypeof error.cause === 'object' || error.cause == null);\n\n/**\n * Tries to parse an error coming from native to a typed JS camera error.\n * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.\n * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable\n * @method\n */\nexport const tryParseNativeCameraError = nativeError => {\n  if (isCameraErrorJson(nativeError)) {\n    if (nativeError.code.startsWith('capture')) {\n      return new CameraCaptureError(nativeError.code, nativeError.message, nativeError.cause);\n    } else {\n      return new CameraRuntimeError(\n      // @ts-expect-error the code is string, we narrow it down to TS union.\n      nativeError.code, nativeError.message, nativeError.cause);\n    }\n  } else {\n    return nativeError;\n  }\n};","map":{"version":3,"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"sources":["C:\\Users\\Samue\\OneDrive\\Documents\\University\\Year 3\\Computing Project\\Code\\RevisionWebApp\\re-vision\\node_modules\\react-native-vision-camera\\src\\CameraError.ts"],"sourcesContent":["export type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';\nexport type ParameterError =\n  | 'parameter/invalid-parameter'\n  | 'parameter/unsupported-os'\n  | 'parameter/unsupported-output'\n  | 'parameter/unsupported-input'\n  | 'parameter/invalid-combination';\nexport type DeviceError =\n  | 'device/configuration-error'\n  | 'device/no-device'\n  | 'device/invalid-device'\n  | 'device/parallel-video-processing-not-supported'\n  | 'device/torch-unavailable'\n  | 'device/microphone-unavailable'\n  | 'device/low-light-boost-not-supported'\n  | 'device/focus-not-supported'\n  | 'device/camera-not-available-on-simulator';\nexport type FrameProcessorError = 'frame-processor/unavailable';\nexport type FormatError =\n  | 'format/invalid-fps'\n  | 'format/invalid-hdr'\n  | 'format/invalid-low-light-boost'\n  | 'format/invalid-format'\n  | 'format/invalid-color-space'\n  | 'format/invalid-preset';\nexport type SessionError =\n  | 'session/camera-not-ready'\n  | 'session/audio-session-setup-failed'\n  | 'session/audio-in-use-by-other-app'\n  | 'session/audio-session-failed-to-activate';\nexport type CaptureError =\n  | 'capture/invalid-photo-format'\n  | 'capture/encoder-error'\n  | 'capture/muxer-error'\n  | 'capture/recording-in-progress'\n  | 'capture/no-recording-in-progress'\n  | 'capture/file-io-error'\n  | 'capture/create-temp-file-error'\n  | 'capture/invalid-video-options'\n  | 'capture/create-recorder-error'\n  | 'capture/recorder-error'\n  | 'capture/no-valid-data'\n  | 'capture/inactive-source'\n  | 'capture/insufficient-storage'\n  | 'capture/file-size-limit-reached'\n  | 'capture/invalid-photo-codec'\n  | 'capture/not-bound-error'\n  | 'capture/capture-type-not-supported'\n  | 'capture/video-not-enabled'\n  | 'capture/photo-not-enabled'\n  | 'capture/aborted'\n  | 'capture/unknown';\nexport type SystemError = 'system/no-camera-manager' | 'system/view-not-found';\nexport type UnknownError = 'unknown/unknown';\n\n/**\n * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.\n */\nexport interface ErrorWithCause {\n  /**\n   * The native error's code.\n   *\n   * * iOS: `NSError.code`\n   * * Android: N/A\n   */\n  code?: number;\n  /**\n   * The native error's domain.\n   *\n   * * iOS: `NSError.domain`\n   * * Android: N/A\n   */\n  domain?: string;\n  /**\n   * The native error description\n   *\n   * * iOS: `NSError.message`\n   * * Android: `Throwable.message`\n   */\n  message: string;\n  /**\n   * Optional additional details\n   *\n   * * iOS: `NSError.userInfo`\n   * * Android: N/A\n   */\n  details?: Record<string, unknown>;\n  /**\n   * Optional Java stacktrace\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.stacktrace.toString()`\n   */\n  stacktrace?: string;\n  /**\n   * Optional additional cause for nested errors\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.cause`\n   */\n  cause?: ErrorWithCause;\n}\n\ntype CameraErrorCode =\n  | PermissionError\n  | ParameterError\n  | DeviceError\n  | FrameProcessorError\n  | FormatError\n  | SessionError\n  | CaptureError\n  | SystemError\n  | UnknownError;\n\n/**\n * Represents any kind of error that occured in the {@linkcode Camera} View Module.\n */\nclass CameraError<TCode extends CameraErrorCode> extends Error {\n  private readonly _code: TCode;\n  private readonly _message: string;\n  private readonly _cause?: ErrorWithCause;\n\n  public get code(): TCode {\n    return this._code;\n  }\n  public get message(): string {\n    return this._message;\n  }\n  public get cause(): Error | undefined {\n    const c = this._cause;\n    if (c == null) return undefined;\n    return new Error(`[${c.code}]: ${c.message}`);\n  }\n\n  /**\n   * @internal\n   */\n  constructor(code: TCode, message: string, cause?: ErrorWithCause) {\n    super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);\n    super.name = code;\n    super.message = message;\n    this._code = code;\n    this._message = message;\n    this._cause = cause;\n  }\n\n  public toString(): string {\n    return `[${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * Represents any kind of error that occured while trying to capture a video or photo.\n *\n * See the [\"Camera Errors\" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraCaptureError extends CameraError<CaptureError> {}\n\n/**\n * Represents any kind of error that occured in the Camera View Module.\n *\n * See the [\"Camera Errors\" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraRuntimeError extends CameraError<\n  PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError\n> {}\n\n/**\n * Checks if the given `error` is of type {@linkcode ErrorWithCause}\n * @param {unknown} error Any unknown object to validate\n * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}\n */\nexport const isErrorWithCause = (error: unknown): error is ErrorWithCause =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.stacktrace === 'string' || error.stacktrace == null) &&\n  // @ts-expect-error error is still unknown\n  (isErrorWithCause(error.cause) || error.cause == null);\n\nconst isCameraErrorJson = (error: unknown): error is { code: string; message: string; cause?: ErrorWithCause } =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.code === 'string' &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.cause === 'object' || error.cause == null);\n\n/**\n * Tries to parse an error coming from native to a typed JS camera error.\n * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.\n * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable\n * @method\n */\nexport const tryParseNativeCameraError = <T>(nativeError: T): (CameraRuntimeError | CameraCaptureError) | T => {\n  if (isCameraErrorJson(nativeError)) {\n    if (nativeError.code.startsWith('capture')) {\n      return new CameraCaptureError(nativeError.code as CaptureError, nativeError.message, nativeError.cause);\n    } else {\n      return new CameraRuntimeError(\n        // @ts-expect-error the code is string, we narrow it down to TS union.\n        nativeError.code,\n        nativeError.message,\n        nativeError.cause,\n      );\n    }\n  } else {\n    return nativeError;\n  }\n};\n"],"mappings":"AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAW,SAAwCC,KAAK,CAAC;EAK7D,IAAWC,IAAIA,CAAA,EAAU;IACvB,OAAO,IAAI,CAACC,KAAK;EACnB;EACA,IAAWC,OAAOA,CAAA,EAAW;IAC3B,OAAO,IAAI,CAACC,QAAQ;EACtB;EACA,IAAWC,KAAKA,CAAA,EAAsB;IACpC,MAAMC,CAAC,GAAG,IAAI,CAACC,MAAM;IACrB,IAAID,CAAC,IAAI,IAAI,EAAE,OAAOE,SAAS;IAC/B,OAAO,IAAIR,KAAK,CAAE,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAAC,CAAC;EAC/C;;EAEA;AACF;AACA;EACEM,WAAWA,CAACR,IAAW,EAAEE,OAAe,EAAEE,KAAsB,EAAE;IAChE,KAAK,CAAE,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAI,GAAI,YAAWA,KAAK,CAACF,OAAQ,GAAE,GAAG,EAAG,EAAC,CAAC;IAClF,KAAK,CAACO,IAAI,GAAGT,IAAI;IACjB,KAAK,CAACE,OAAO,GAAGA,OAAO;IACvB,IAAI,CAACD,KAAK,GAAGD,IAAI;IACjB,IAAI,CAACG,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACI,MAAM,GAAGF,KAAK;EACrB;EAEOM,QAAQA,CAAA,EAAW;IACxB,OAAQ,IAAG,IAAI,CAACV,IAAK,MAAK,IAAI,CAACE,OAAQ,EAAC;EAC1C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,kBAAkB,SAASb,WAAW,CAAe;;AAElE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMc,kBAAkB,SAASd,WAAW,CAEjD;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMe,gBAAgB,GAAIC,KAAc,IAC7C,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACZ,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOY,KAAK,CAACC,UAAU,KAAK,QAAQ,IAAID,KAAK,CAACC,UAAU,IAAI,IAAI,CAAC;AAClE;AACCF,gBAAgB,CAACC,KAAK,CAACV,KAAK,CAAC,IAAIU,KAAK,CAACV,KAAK,IAAI,IAAI,CAAC;AAExD,MAAMY,iBAAiB,GAAIF,KAAc,IACvC,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACd,IAAI,KAAK,QAAQ;AAC9B;AACA,OAAOc,KAAK,CAACZ,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOY,KAAK,CAACV,KAAK,KAAK,QAAQ,IAAIU,KAAK,CAACV,KAAK,IAAI,IAAI,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMa,yBAAyB,GAAOC,WAAc,IAAoD;EAC7G,IAAIF,iBAAiB,CAACE,WAAW,CAAC,EAAE;IAClC,IAAIA,WAAW,CAAClB,IAAI,CAACmB,UAAU,CAAC,SAAS,CAAC,EAAE;MAC1C,OAAO,IAAIR,kBAAkB,CAACO,WAAW,CAAClB,IAAI,EAAkBkB,WAAW,CAAChB,OAAO,EAAEgB,WAAW,CAACd,KAAK,CAAC;IACzG,CAAC,MAAM;MACL,OAAO,IAAIQ,kBAAkB;MAC3B;MACAM,WAAW,CAAClB,IAAI,EAChBkB,WAAW,CAAChB,OAAO,EACnBgB,WAAW,CAACd,KACd,CAAC;IACH;EACF,CAAC,MAAM;IACL,OAAOc,WAAW;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}