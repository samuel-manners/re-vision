{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\Samue\\OneDrive\\Documents\\University\\Year 3\\Computing Project\\Code\\RevisionWebApp\\re-vision\\node_modules\\react-native-vision-camera\\src\\PhotoFile.ts"],"sourcesContent":["import { Orientation } from './Orientation'\nimport type { TemporaryFile } from './TemporaryFile'\n\nexport interface TakePhotoOptions {\n  /**\n   * Indicates how photo quality should be prioritized against speed.\n   *\n   * * `\"quality\"` Indicates that photo quality is paramount, even at the expense of shot-to-shot time\n   * * `\"balanced\"` Indicates that photo quality and speed of delivery are balanced in priority\n   * * `\"speed\"` Indicates that speed of photo delivery is most important, even at the expense of quality\n   *\n   * @default \"balanced\"\n   */\n  qualityPrioritization?: 'quality' | 'balanced' | 'speed'\n  /**\n   * Whether the Flash should be enabled or disabled\n   *\n   * @default \"auto\"\n   */\n  flash?: 'on' | 'off' | 'auto'\n  /**\n   * Specifies whether red-eye reduction should be applied automatically on flash captures.\n   *\n   * @default false\n   */\n  enableAutoRedEyeReduction?: boolean\n  /**\n   * Indicates whether still image stabilization will be enabled when capturing the photo\n   *\n   * @default false\n   */\n  enableAutoStabilization?: boolean\n  /**\n   * Specifies whether the photo output should use content aware distortion correction on this photo request.\n   * For example, the algorithm may not apply correction to faces in the center of a photo, but may apply it to faces near the photoâ€™s edges.\n   *\n   * @platform iOS\n   * @default false\n   */\n  enableAutoDistortionCorrection?: boolean\n  /**\n   * Whether to play the default shutter \"click\" sound when taking a picture or not.\n   *\n   * @default true\n   */\n  enableShutterSound?: boolean\n}\n\n/**\n * Represents a Photo taken by the Camera written to the local filesystem.\n *\n * See {@linkcode Camera.takePhoto | Camera.takePhoto()}\n */\nexport interface PhotoFile extends TemporaryFile {\n  /**\n   * The width of the photo, in pixels.\n   */\n  width: number\n  /**\n   * The height of the photo, in pixels.\n   */\n  height: number\n  /**\n   * Whether this photo is in RAW format or not.\n   */\n  isRawPhoto: boolean\n  /**\n   * Display orientation of the photo, relative to the Camera's sensor orientation.\n   *\n   * Note that Camera sensors are landscape, so e.g. \"portrait\" photos will have a value of \"landscape-left\", etc.\n   */\n  orientation: Orientation\n  /**\n   * Whether this photo is mirrored (selfies) or not.\n   */\n  isMirrored: boolean\n  thumbnail?: Record<string, unknown>\n  /**\n   * Metadata information describing the captured image. (iOS only)\n   *\n   * @see [AVCapturePhoto.metadata](https://developer.apple.com/documentation/avfoundation/avcapturephoto/2873982-metadata)\n   *\n   * @platform iOS\n   */\n  metadata?: {\n    /**\n     * Orientation of the EXIF Image.\n     *\n     * * 1 = 0 degrees: the correct orientation, no adjustment is required.\n     * * 2 = 0 degrees, mirrored: image has been flipped back-to-front.\n     * * 3 = 180 degrees: image is upside down.\n     * * 4 = 180 degrees, mirrored: image has been flipped back-to-front and is upside down.\n     * * 5 = 90 degrees: image has been flipped back-to-front and is on its side.\n     * * 6 = 90 degrees, mirrored: image is on its side.\n     * * 7 = 270 degrees: image has been flipped back-to-front and is on its far side.\n     * * 8 = 270 degrees, mirrored: image is on its far side.\n     */\n    Orientation: number\n    /**\n     * @platform iOS\n     */\n    DPIHeight: number\n    /**\n     * @platform iOS\n     */\n    DPIWidth: number\n    /**\n     * Represents any data Apple cameras write to the metadata\n     *\n     * @platform iOS\n     */\n    '{MakerApple}'?: Record<string, unknown>\n    '{TIFF}': {\n      ResolutionUnit: number\n      Software: string\n      Make: string\n      DateTime: string\n      XResolution: number\n      /**\n       * @platform iOS\n       */\n      HostComputer?: string\n      Model: string\n      YResolution: number\n    }\n    '{Exif}': {\n      DateTimeOriginal: string\n      ExposureTime: number\n      FNumber: number\n      LensSpecification: number[]\n      ExposureBiasValue: number\n      ColorSpace: number\n      FocalLenIn35mmFilm: number\n      BrightnessValue: number\n      ExposureMode: number\n      LensModel: string\n      SceneType: number\n      PixelXDimension: number\n      ShutterSpeedValue: number\n      SensingMethod: number\n      SubjectArea: number[]\n      ApertureValue: number\n      SubsecTimeDigitized: string\n      FocalLength: number\n      LensMake: string\n      SubsecTimeOriginal: string\n      OffsetTimeDigitized: string\n      PixelYDimension: number\n      ISOSpeedRatings: number[]\n      WhiteBalance: number\n      DateTimeDigitized: string\n      OffsetTimeOriginal: string\n      ExifVersion: string\n      OffsetTime: string\n      Flash: number\n      ExposureProgram: number\n      MeteringMode: number\n    }\n  }\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}