{"ast":null,"code":"import { NativeModules, Platform } from 'react-native';\nimport { CameraRuntimeError } from './CameraError';\nconst supportedPlatforms = ['ios', 'android', 'macos'];\n\n// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nexport const CameraModule = NativeModules.CameraView;\nif (CameraModule == null) {\n  var _global$expo;\n  if (!supportedPlatforms.includes(Platform.OS)) {\n    throw new CameraRuntimeError('system/camera-module-not-found', `Failed to initialize VisionCamera: VisionCamera currently does not work on ${Platform.OS}.`);\n  }\n  let message = 'Failed to initialize VisionCamera: The native Camera Module (`NativeModules.CameraView`) could not be found.';\n  message += '\\n* Make sure react-native-vision-camera is correctly autolinked (run `npx react-native config` to verify)';\n  if (Platform.OS === 'ios' || Platform.OS === 'macos') message += '\\n* Make sure you ran `pod install` in the ios/ directory.';\n  if (Platform.OS === 'android') message += '\\n* Make sure gradle is synced.';\n\n  // check if Expo\n  // @ts-expect-error expo global JSI modules are not typed\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const ExpoConstants = (_global$expo = global.expo) === null || _global$expo === void 0 || (_global$expo = _global$expo.modules) === null || _global$expo === void 0 ? void 0 : _global$expo.ExponentConstants;\n  if (ExpoConstants != null) {\n    if (ExpoConstants.appOwnership === 'expo') {\n      // We're running Expo Go\n      throw new CameraRuntimeError('system/camera-module-not-found', `react-native-vision-camera is not supported in Expo Go! Use EAS/expo prebuild instead (\\`expo run:${Platform.OS}\\`). For more info, see https://docs.expo.dev/workflow/prebuild/.`);\n    } else {\n      // We're running Expo bare / standalone\n      message += '\\n* Make sure you ran `expo prebuild`.';\n    }\n  }\n  message += '\\n* Make sure you rebuilt the app.';\n  throw new CameraRuntimeError('system/camera-module-not-found', message);\n}","map":{"version":3,"names":["NativeModules","Platform","CameraRuntimeError","supportedPlatforms","CameraModule","CameraView","_global$expo","includes","OS","message","ExpoConstants","global","expo","modules","ExponentConstants","appOwnership"],"sources":["C:\\Users\\Samue\\OneDrive\\Documents\\University\\Year 3\\Computing Project\\Code\\RevisionWebApp\\re-vision\\node_modules\\react-native-vision-camera\\src\\NativeCameraModule.ts"],"sourcesContent":["import { NativeModules, Platform } from 'react-native'\nimport { CameraRuntimeError } from './CameraError'\n\nconst supportedPlatforms = ['ios', 'android', 'macos']\n\n// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nexport const CameraModule = NativeModules.CameraView\nif (CameraModule == null) {\n  if (!supportedPlatforms.includes(Platform.OS)) {\n    throw new CameraRuntimeError(\n      'system/camera-module-not-found',\n      `Failed to initialize VisionCamera: VisionCamera currently does not work on ${Platform.OS}.`,\n    )\n  }\n\n  let message = 'Failed to initialize VisionCamera: The native Camera Module (`NativeModules.CameraView`) could not be found.'\n  message += '\\n* Make sure react-native-vision-camera is correctly autolinked (run `npx react-native config` to verify)'\n  if (Platform.OS === 'ios' || Platform.OS === 'macos') message += '\\n* Make sure you ran `pod install` in the ios/ directory.'\n\n  if (Platform.OS === 'android') message += '\\n* Make sure gradle is synced.'\n\n  // check if Expo\n  // @ts-expect-error expo global JSI modules are not typed\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const ExpoConstants = global.expo?.modules?.ExponentConstants\n  if (ExpoConstants != null) {\n    if (ExpoConstants.appOwnership === 'expo') {\n      // We're running Expo Go\n      throw new CameraRuntimeError(\n        'system/camera-module-not-found',\n        `react-native-vision-camera is not supported in Expo Go! Use EAS/expo prebuild instead (\\`expo run:${Platform.OS}\\`). For more info, see https://docs.expo.dev/workflow/prebuild/.`,\n      )\n    } else {\n      // We're running Expo bare / standalone\n      message += '\\n* Make sure you ran `expo prebuild`.'\n    }\n  }\n\n  message += '\\n* Make sure you rebuilt the app.'\n  throw new CameraRuntimeError('system/camera-module-not-found', message)\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,cAAc;AACtD,SAASC,kBAAkB,QAAQ,eAAe;AAElD,MAAMC,kBAAkB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC;;AAEtD;AACA;AACA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,CAACK,UAAU;AACpD,IAAID,YAAY,IAAI,IAAI,EAAE;EAAA,IAAAE,YAAA;EACxB,IAAI,CAACH,kBAAkB,CAACI,QAAQ,CAACN,QAAQ,CAACO,EAAE,CAAC,EAAE;IAC7C,MAAM,IAAIN,kBAAkB,CAC1B,gCAAgC,EAC/B,8EAA6ED,QAAQ,CAACO,EAAG,GAC5F,CAAC;EACH;EAEA,IAAIC,OAAO,GAAG,8GAA8G;EAC5HA,OAAO,IAAI,4GAA4G;EACvH,IAAIR,QAAQ,CAACO,EAAE,KAAK,KAAK,IAAIP,QAAQ,CAACO,EAAE,KAAK,OAAO,EAAEC,OAAO,IAAI,4DAA4D;EAE7H,IAAIR,QAAQ,CAACO,EAAE,KAAK,SAAS,EAAEC,OAAO,IAAI,iCAAiC;;EAE3E;EACA;EACA;EACA,MAAMC,aAAa,IAAAJ,YAAA,GAAGK,MAAM,CAACC,IAAI,cAAAN,YAAA,gBAAAA,YAAA,GAAXA,YAAA,CAAaO,OAAO,cAAAP,YAAA,uBAApBA,YAAA,CAAsBQ,iBAAiB;EAC7D,IAAIJ,aAAa,IAAI,IAAI,EAAE;IACzB,IAAIA,aAAa,CAACK,YAAY,KAAK,MAAM,EAAE;MACzC;MACA,MAAM,IAAIb,kBAAkB,CAC1B,gCAAgC,EAC/B,qGAAoGD,QAAQ,CAACO,EAAG,mEACnH,CAAC;IACH,CAAC,MAAM;MACL;MACAC,OAAO,IAAI,wCAAwC;IACrD;EACF;EAEAA,OAAO,IAAI,oCAAoC;EAC/C,MAAM,IAAIP,kBAAkB,CAAC,gCAAgC,EAAEO,OAAO,CAAC;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}