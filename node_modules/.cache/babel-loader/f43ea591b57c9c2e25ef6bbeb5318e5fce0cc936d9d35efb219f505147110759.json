{"ast":null,"code":"import { unescapeFacetValue, escapeFacetValue } from \"./escapeFacetValue.js\";\nimport { find } from \"./find.js\";\nfunction getRefinement(state, type, attribute, name) {\n  var resultsFacets = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var res = {\n    type: type,\n    attribute: attribute,\n    name: name,\n    escapedValue: escapeFacetValue(name)\n  };\n  var facet = find(resultsFacets, function (resultsFacet) {\n    return resultsFacet.name === attribute;\n  });\n  var count;\n  if (type === 'hierarchical') {\n    var facetDeclaration = state.getHierarchicalFacetByName(attribute);\n    var nameParts = name.split(facetDeclaration.separator);\n    var getFacetRefinement = function getFacetRefinement(facetData) {\n      return function (refinementKey) {\n        return facetData[refinementKey];\n      };\n    };\n    var _loop = function _loop(i) {\n      facet = facet && facet.data && find(Object.keys(facet.data).map(getFacetRefinement(facet.data)), function (refinement) {\n        return refinement.name === nameParts[i];\n      });\n    };\n    for (var i = 0; facet !== undefined && i < nameParts.length; ++i) {\n      _loop(i);\n    }\n    count = facet && facet.count;\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n  if (count !== undefined) {\n    res.count = count;\n  }\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n  return res;\n}\nexport function getRefinements(results, state) {\n  var includesQuery = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var refinements = [];\n  var _state$facetsRefineme = state.facetsRefinements,\n    facetsRefinements = _state$facetsRefineme === void 0 ? {} : _state$facetsRefineme,\n    _state$facetsExcludes = state.facetsExcludes,\n    facetsExcludes = _state$facetsExcludes === void 0 ? {} : _state$facetsExcludes,\n    _state$disjunctiveFac = state.disjunctiveFacetsRefinements,\n    disjunctiveFacetsRefinements = _state$disjunctiveFac === void 0 ? {} : _state$disjunctiveFac,\n    _state$hierarchicalFa = state.hierarchicalFacetsRefinements,\n    hierarchicalFacetsRefinements = _state$hierarchicalFa === void 0 ? {} : _state$hierarchicalFa,\n    _state$numericRefinem = state.numericRefinements,\n    numericRefinements = _state$numericRefinem === void 0 ? {} : _state$numericRefinem,\n    _state$tagRefinements = state.tagRefinements,\n    tagRefinements = _state$tagRefinements === void 0 ? [] : _state$tagRefinements;\n  Object.keys(facetsRefinements).forEach(function (attribute) {\n    var refinementNames = facetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'facet', attribute, refinementName, results.facets));\n    });\n  });\n  Object.keys(facetsExcludes).forEach(function (attribute) {\n    var refinementNames = facetsExcludes[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push({\n        type: 'exclude',\n        attribute: attribute,\n        name: refinementName,\n        exclude: true\n      });\n    });\n  });\n  Object.keys(disjunctiveFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = disjunctiveFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'disjunctive', attribute,\n      // We unescape any disjunctive refined values with `unescapeFacetValue` because\n      // they can be escaped on negative numeric values with `escapeFacetValue`.\n      unescapeFacetValue(refinementName), results.disjunctiveFacets));\n    });\n  });\n  Object.keys(hierarchicalFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = hierarchicalFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinement) {\n      refinements.push(getRefinement(state, 'hierarchical', attribute, refinement, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(numericRefinements).forEach(function (attribute) {\n    var operators = numericRefinements[attribute];\n    Object.keys(operators).forEach(function (operatorOriginal) {\n      var operator = operatorOriginal;\n      var valueOrValues = operators[operator];\n      var refinementNames = Array.isArray(valueOrValues) ? valueOrValues : [valueOrValues];\n      refinementNames.forEach(function (refinementName) {\n        refinements.push({\n          type: 'numeric',\n          attribute: attribute,\n          name: \"\".concat(refinementName),\n          numericValue: refinementName,\n          operator: operator\n        });\n      });\n    });\n  });\n  tagRefinements.forEach(function (refinementName) {\n    refinements.push({\n      type: 'tag',\n      attribute: '_tags',\n      name: refinementName\n    });\n  });\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query\n    });\n  }\n  return refinements;\n}","map":{"version":3,"names":["unescapeFacetValue","escapeFacetValue","find","getRefinement","state","type","attribute","name","resultsFacets","arguments","length","undefined","res","escapedValue","facet","resultsFacet","count","facetDeclaration","getHierarchicalFacetByName","nameParts","split","separator","getFacetRefinement","facetData","refinementKey","_loop","i","data","Object","keys","map","refinement","exhaustive","getRefinements","results","includesQuery","refinements","_state$facetsRefineme","facetsRefinements","_state$facetsExcludes","facetsExcludes","_state$disjunctiveFac","disjunctiveFacetsRefinements","_state$hierarchicalFa","hierarchicalFacetsRefinements","_state$numericRefinem","numericRefinements","_state$tagRefinements","tagRefinements","forEach","refinementNames","refinementName","push","facets","exclude","disjunctiveFacets","hierarchicalFacets","operators","operatorOriginal","operator","valueOrValues","Array","isArray","concat","numericValue","query","trim"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/node_modules/instantsearch.js/es/lib/utils/getRefinements.js"],"sourcesContent":["import { unescapeFacetValue, escapeFacetValue } from \"./escapeFacetValue.js\";\nimport { find } from \"./find.js\";\nfunction getRefinement(state, type, attribute, name) {\n  var resultsFacets = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var res = {\n    type: type,\n    attribute: attribute,\n    name: name,\n    escapedValue: escapeFacetValue(name)\n  };\n  var facet = find(resultsFacets, function (resultsFacet) {\n    return resultsFacet.name === attribute;\n  });\n  var count;\n  if (type === 'hierarchical') {\n    var facetDeclaration = state.getHierarchicalFacetByName(attribute);\n    var nameParts = name.split(facetDeclaration.separator);\n    var getFacetRefinement = function getFacetRefinement(facetData) {\n      return function (refinementKey) {\n        return facetData[refinementKey];\n      };\n    };\n    var _loop = function _loop(i) {\n      facet = facet && facet.data && find(Object.keys(facet.data).map(getFacetRefinement(facet.data)), function (refinement) {\n        return refinement.name === nameParts[i];\n      });\n    };\n    for (var i = 0; facet !== undefined && i < nameParts.length; ++i) {\n      _loop(i);\n    }\n    count = facet && facet.count;\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n  if (count !== undefined) {\n    res.count = count;\n  }\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n  return res;\n}\nexport function getRefinements(results, state) {\n  var includesQuery = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var refinements = [];\n  var _state$facetsRefineme = state.facetsRefinements,\n    facetsRefinements = _state$facetsRefineme === void 0 ? {} : _state$facetsRefineme,\n    _state$facetsExcludes = state.facetsExcludes,\n    facetsExcludes = _state$facetsExcludes === void 0 ? {} : _state$facetsExcludes,\n    _state$disjunctiveFac = state.disjunctiveFacetsRefinements,\n    disjunctiveFacetsRefinements = _state$disjunctiveFac === void 0 ? {} : _state$disjunctiveFac,\n    _state$hierarchicalFa = state.hierarchicalFacetsRefinements,\n    hierarchicalFacetsRefinements = _state$hierarchicalFa === void 0 ? {} : _state$hierarchicalFa,\n    _state$numericRefinem = state.numericRefinements,\n    numericRefinements = _state$numericRefinem === void 0 ? {} : _state$numericRefinem,\n    _state$tagRefinements = state.tagRefinements,\n    tagRefinements = _state$tagRefinements === void 0 ? [] : _state$tagRefinements;\n  Object.keys(facetsRefinements).forEach(function (attribute) {\n    var refinementNames = facetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'facet', attribute, refinementName, results.facets));\n    });\n  });\n  Object.keys(facetsExcludes).forEach(function (attribute) {\n    var refinementNames = facetsExcludes[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push({\n        type: 'exclude',\n        attribute: attribute,\n        name: refinementName,\n        exclude: true\n      });\n    });\n  });\n  Object.keys(disjunctiveFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = disjunctiveFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'disjunctive', attribute,\n      // We unescape any disjunctive refined values with `unescapeFacetValue` because\n      // they can be escaped on negative numeric values with `escapeFacetValue`.\n      unescapeFacetValue(refinementName), results.disjunctiveFacets));\n    });\n  });\n  Object.keys(hierarchicalFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = hierarchicalFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinement) {\n      refinements.push(getRefinement(state, 'hierarchical', attribute, refinement, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(numericRefinements).forEach(function (attribute) {\n    var operators = numericRefinements[attribute];\n    Object.keys(operators).forEach(function (operatorOriginal) {\n      var operator = operatorOriginal;\n      var valueOrValues = operators[operator];\n      var refinementNames = Array.isArray(valueOrValues) ? valueOrValues : [valueOrValues];\n      refinementNames.forEach(function (refinementName) {\n        refinements.push({\n          type: 'numeric',\n          attribute: attribute,\n          name: \"\".concat(refinementName),\n          numericValue: refinementName,\n          operator: operator\n        });\n      });\n    });\n  });\n  tagRefinements.forEach(function (refinementName) {\n    refinements.push({\n      type: 'tag',\n      attribute: '_tags',\n      name: refinementName\n    });\n  });\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query\n    });\n  }\n  return refinements;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}