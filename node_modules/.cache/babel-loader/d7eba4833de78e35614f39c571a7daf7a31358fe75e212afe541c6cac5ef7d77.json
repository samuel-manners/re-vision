{"ast":null,"code":"import { CameraRuntimeError } from './CameraError';\nexport function assertJSIAvailable() {\n  // Check if we are running on-device (JSI)\n  // @ts-expect-error JSI functions aren't typed\n  if (global.nativeCallSyncHook == null) {\n    throw new CameraRuntimeError('system/frame-processors-unavailable', 'Failed to initialize VisionCamera Frame Processors: React Native is not running on-device. Frame Processors can only be used when synchronous method invocations (JSI) are possible. If you are using a remote debugger (e.g. Chrome), switch to an on-device debugger (e.g. Flipper) instead.');\n  }\n}","map":{"version":3,"names":["CameraRuntimeError","assertJSIAvailable","global","nativeCallSyncHook"],"sources":["C:\\Users\\Samue\\OneDrive\\Documents\\University\\Year 3\\Computing Project\\Code\\RevisionWebApp\\re-vision\\node_modules\\react-native-vision-camera\\src\\JSIHelper.ts"],"sourcesContent":["import { CameraRuntimeError } from './CameraError'\n\nexport function assertJSIAvailable(): void {\n  // Check if we are running on-device (JSI)\n  // @ts-expect-error JSI functions aren't typed\n  if (global.nativeCallSyncHook == null) {\n    throw new CameraRuntimeError(\n      'system/frame-processors-unavailable',\n      'Failed to initialize VisionCamera Frame Processors: React Native is not running on-device. Frame Processors can only be used when synchronous method invocations (JSI) are possible. If you are using a remote debugger (e.g. Chrome), switch to an on-device debugger (e.g. Flipper) instead.',\n    )\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,eAAe;AAElD,OAAO,SAASC,kBAAkBA,CAAA,EAAS;EACzC;EACA;EACA,IAAIC,MAAM,CAACC,kBAAkB,IAAI,IAAI,EAAE;IACrC,MAAM,IAAIH,kBAAkB,CAC1B,qCAAqC,EACrC,gSACF,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}