{"ast":null,"code":"/**\n * Throws an error if the condition is not met.\n *\n * The error is exhaustive in development, and becomes generic in production.\n *\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n  if (!(process.env.NODE_ENV === 'development')) {\n    throw new Error('Invariant failed');\n  }\n  if (process.env.NODE_ENV === 'development') {\n    throw new Error(\"[InstantSearch] \".concat(typeof message === 'function' ? message() : message));\n  }\n}","map":{"version":3,"names":["invariant","condition","message","process","env","NODE_ENV","Error","concat"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/node_modules/react-instantsearch-core/dist/es/lib/invariant.js"],"sourcesContent":["/**\n * Throws an error if the condition is not met.\n *\n * The error is exhaustive in development, and becomes generic in production.\n *\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n  if (!(process.env.NODE_ENV === 'development')) {\n    throw new Error('Invariant failed');\n  }\n  if (process.env.NODE_ENV === 'development') {\n    throw new Error(\"[InstantSearch] \".concat(typeof message === 'function' ? message() : message));\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAASA,CAACC,SAAS,EAAEC,OAAO,EAAE;EAC5C,IAAID,SAAS,EAAE;IACb;EACF;EACA,IAAI,EAAEE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,CAAC,EAAE;IAC7C,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;EACrC;EACA,IAAIH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAACC,MAAM,CAAC,OAAOL,OAAO,KAAK,UAAU,GAAGA,OAAO,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC;EACjG;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}