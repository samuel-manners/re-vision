{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\Samue\\OneDrive\\Documents\\University\\Year 3\\Computing Project\\Code\\RevisionWebApp\\re-vision\\node_modules\\react-native-vision-camera\\src\\CodeScanner.ts"],"sourcesContent":["import { Point } from './Point'\n\n/**\n * The type of the code to scan.\n */\nexport type CodeType =\n  | 'code-128'\n  | 'code-39'\n  | 'code-93'\n  | 'codabar'\n  | 'ean-13'\n  | 'ean-8'\n  | 'itf'\n  | 'upc-e'\n  | 'qr'\n  | 'pdf-417'\n  | 'aztec'\n  | 'data-matrix'\n\n/**\n * The full area that is used for code scanning. In most cases, this is 1280x720 or 1920x1080.\n */\nexport interface CodeScannerFrame {\n  /**\n   * The width of the frame\n   */\n  width: number\n  /**\n   * The height of the frame\n   */\n  height: number\n}\n\n/**\n * A scanned code.\n */\nexport interface Code {\n  /**\n   * The type of the code that was scanned.\n   */\n  type: CodeType | 'unknown'\n  /**\n   * The string value, or null if it cannot be decoded.\n   */\n  value?: string\n  /**\n   * The location of the code relative to the Camera Preview (in dp).\n   */\n  frame?: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  /**\n   * The location of each corner relative to the Camera Preview (in dp).\n   */\n  corners?: Point[]\n}\n\n/**\n * A scanner for detecting codes in a Camera Stream.\n */\nexport interface CodeScanner {\n  /**\n   * The types of codes to configure the code scanner for.\n   */\n  codeTypes: CodeType[]\n  /**\n   * A callback to call whenever the scanned codes change.\n   * @param codes The scanned codes, or an empty array if none.\n   * @param frame The full area that is used for scanning. Code bounds and corners are relative to this frame.\n   */\n  onCodeScanned: (codes: Code[], frame: CodeScannerFrame) => void\n  /**\n   * Crops the scanner's view area to the specific region of interest.\n   *\n   * @platform iOS\n   */\n  regionOfInterest?: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}