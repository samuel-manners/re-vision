{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samue\\\\OneDrive\\\\Documents\\\\University\\\\Year 3\\\\Computing Project\\\\Code\\\\RevisionWebApp\\\\re-vision\\\\src\\\\components\\\\main\\\\Camera.js\",\n  _s = $RefreshSig$();\n//Code Ref: https://blog.logrocket.com/using-react-webcam-capture-display-images/\n\n// import useRef, useState, useCallback\nimport { useRef, useState, useCallback } from \"react\";\n// import Webcam component\nimport Webcam from \"react-webcam\";\nimport { saveAs } from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomWebcam = () => {\n  _s();\n  const webcamRef = useRef(null); // create a webcam reference\n  const [imgSrc, setImgSrc] = useState(null); // initialize it\n\n  // Captures Photo\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef]);\n  const retake = () => {\n    setImgSrc(null);\n  };\n  const saveImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    const blob = dataURItoBlob(imageSrc);\n    saveAs(blob, \"my-image.jpg\");\n  };\n\n  // Convert data URI to binary array\n  function dataURItoBlob(dataURI) {\n    // Split the data URI into parts\n    var parts = dataURI.split(\",\");\n    // Get the content type (image/jpeg)\n    var type = parts[0].split(\":\")[1].split(\";\")[0];\n    // Decode the base64 data\n    var data = atob(parts[1]);\n    // Create a binary array\n    var array = [];\n    for (var i = 0; i < data.length; i++) {\n      array.push(data.charCodeAt(i));\n    }\n    // Return a Blob object\n    return new Blob([new Uint8Array(array)], {\n      type: type\n    });\n  }\n\n  /*---------------------------------------------*/\n  // Create a file input element to select a jpg file\n  function getImage() {\n    var fileInput = document.createElement(\"input\");\n    fileInput.type = \"file\";\n    fileInput.accept = \"image/jpeg\";\n    var response = sendImage(fileInput);\n    console.log(response);\n  }\n\n  // Function for sending photo\n  async function sendImage(imageSrc) {\n    try {\n      // get the image file as a blob\n      const responses = await fetch(imageSrc);\n      const blob = await responses.blob();\n\n      // create a FormData object and append the blob\n      const formData = new FormData();\n      formData.append(\"image\", blob, \"image.jpg\");\n\n      // send the request with the FormData as the body\n      const response = await fetch(\"http://sam141.brighton.domains/cloudvisionapi\", {\n        method: \"POST\",\n        body: formData\n      });\n      // handle the response\n      if (response.ok) {\n        console.log(\"Image sent successfully\");\n        console.log(response);\n      } else {\n        console.error(\"Error sending image - response as follows:\");\n        console.log(response);\n      }\n    } catch (error) {\n      console.log(\"Error when sending image - error as follows:\");\n      console.log(error);\n    }\n    ;\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [imgSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc,\n      alt: \"webcam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Webcam\n    //height={960}\n    //width={540}\n    , {\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      screenshotQuality: 0.8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveImage,\n        children: \"Save photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: retake,\n        children: \"Retake photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getImage,\n        children: \"Send photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capture,\n        children: \"Capture photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomWebcam, \"ESwUrLq+HE9liXlylGlqUDf3hvQ=\");\n_c = CustomWebcam;\nexport default CustomWebcam;\nvar _c;\n$RefreshReg$(_c, \"CustomWebcam\");","map":{"version":3,"names":["useRef","useState","useCallback","Webcam","saveAs","jsxDEV","_jsxDEV","CustomWebcam","_s","webcamRef","imgSrc","setImgSrc","capture","imageSrc","current","getScreenshot","retake","saveImage","blob","dataURItoBlob","dataURI","parts","split","type","data","atob","array","i","length","push","charCodeAt","Blob","Uint8Array","getImage","fileInput","document","createElement","accept","response","sendImage","console","log","responses","fetch","formData","FormData","append","method","body","ok","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","screenshotFormat","screenshotQuality","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Samue/OneDrive/Documents/University/Year 3/Computing Project/Code/RevisionWebApp/re-vision/src/components/main/Camera.js"],"sourcesContent":["//Code Ref: https://blog.logrocket.com/using-react-webcam-capture-display-images/\r\n\r\n// import useRef, useState, useCallback\r\nimport { useRef, useState, useCallback } from \"react\";\r\n// import Webcam component\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\nconst CustomWebcam = () => {\r\n  const webcamRef = useRef(null); // create a webcam reference\r\n  const [imgSrc, setImgSrc] = useState(null); // initialize it\r\n\r\n  // Captures Photo\r\n  const capture = useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n  }, [webcamRef]);\r\n\r\n  const retake = () => {\r\n    setImgSrc(null);\r\n  };\r\n\r\n  const saveImage = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    const blob = dataURItoBlob(imageSrc);\r\n    saveAs(blob, \"my-image.jpg\");\r\n  };\r\n\r\n  // Convert data URI to binary array\r\n  function dataURItoBlob(dataURI) {\r\n    // Split the data URI into parts\r\n    var parts = dataURI.split(\",\");\r\n    // Get the content type (image/jpeg)\r\n    var type = parts[0].split(\":\")[1].split(\";\")[0];\r\n    // Decode the base64 data\r\n    var data = atob(parts[1]);\r\n    // Create a binary array\r\n    var array = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      array.push(data.charCodeAt(i));\r\n    }\r\n    // Return a Blob object\r\n    return new Blob([new Uint8Array(array)], { type: type });\r\n  }\r\n\r\n  /*---------------------------------------------*/\r\n  // Create a file input element to select a jpg file\r\n  function getImage() {\r\n    var fileInput = document.createElement(\"input\");\r\n    fileInput.type = \"file\";\r\n    fileInput.accept = \"image/jpeg\";\r\n    var response = sendImage(fileInput);\r\n    console.log(response)\r\n  }\r\n\r\n\r\n\r\n\r\n  // Function for sending photo\r\n  async function sendImage(imageSrc) {\r\n    try {\r\n\r\n      // get the image file as a blob\r\n      const responses = await fetch(imageSrc);\r\n      const blob = await responses.blob();\r\n\r\n      // create a FormData object and append the blob\r\n      const formData = new FormData();\r\n      formData.append(\"image\", blob, \"image.jpg\");\r\n\r\n      // send the request with the FormData as the body\r\n      const response = await fetch(\"http://sam141.brighton.domains/cloudvisionapi\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n      // handle the response\r\n      if (response.ok) {\r\n        console.log(\"Image sent successfully\");\r\n        console.log(response);\r\n      } else {\r\n        console.error(\"Error sending image - response as follows:\");\r\n        console.log(response);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\"Error when sending image - error as follows:\");\r\n      console.log(error);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {imgSrc ? (\r\n        <img src={imgSrc} alt=\"webcam\" />\r\n      ) : (\r\n        <Webcam\r\n          //height={960}\r\n          //width={540}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          screenshotQuality={0.8}\r\n        />\r\n      )}\r\n      <div className=\"btn-container\">\r\n        <button onClick={saveImage}>Save photo</button>\r\n\r\n        <button onClick={retake}>Retake photo</button>\r\n        <button onClick={getImage}>Send photo</button>\r\n\r\n        <button onClick={capture}>Capture photo</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CustomWebcam;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}